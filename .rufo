# Whether to put a space after an array bracket. Valid values are:
#
# * :dynamic: if there's a space, keep it. If not, don't add it
# * :always: always put a space after an array bracket (default)
# * :never: never put a space after an array bracket
space_after_array_bracket :never

# Whether to put a space after a hash brace. Valid values are:
#
# * :dynamic: if there's a space, keep it. If not, don't add it (default)
# * :always: always put a space after a hash brace
# * :never: never put a space after a hash brace
space_after_hash_brace :always

# Whether to align successive comments (default: false)
align_comments false

# Whether to align successive assignments (default: false)
align_assignments false

# Whether to align successive hash keys (default: false)
align_hash_keys false

# Whether to align successive case when (default: false)
align_case_when true

# Whether to align chained calls to the first dot in the first line (default: false)
align_chained_calls false

# Preserve whitespace after assignments target and values,
# after calls that start with a space, hash arrows and commas (default: true).
#
# This allows for manual alignment of some code that would otherwise
# be impossible to automatically format or preserve "beautiful".
#
# If `align_assignments` is true, this doesn't apply to assignments.
# If `align_hash_keys` is true, this doesn't apply to hash keys.
#
#
# Can also be set to `:YES` to preserve whitespace in many more places,
# in case there's no clear rule in your workplace/project as to when
# to leave spaces or not. This includes spaces (or the absence of them)
# around dots, braces, pipes and hash keys and values.
preserve_whitespace true

# The indent size (default: 2)
indent_size 2

# Whether to place commas at the end of a multi-line list
#
# * :dynamic: if there's a comma, keep it. If not, don't add it (default)
# * :always: always put a comma
# * :never: never put a comma
trailing_commas :always
